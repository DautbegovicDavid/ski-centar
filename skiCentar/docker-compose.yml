version: '3'
services:

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - 5672
    networks:
      - skicentarnet

  skicentar-sql:
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=${ACCEPT_EULA}
      - SA_PASSWORD=${SA_PASSWORD}
      - MSSQL_PID=${MSSQL_PID}
    ports:
      - "1401:1433"
    expose:
      - 1433
    networks:
      - skicentarnet

  mailing-service:
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile.emailsender
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_VIRTUALHOST=${RABBITMQ_VIRTUALHOST}
      - EMAIL_APIKEY=${EMAIL_APIKEY}
      - EMAIL_SENDER=${EMAIL_SENDER}
    depends_on:
      - rabbitmq
      - skicentar-sql
      - skicentar-api
    networks:
      - skicentarnet
    ports:
      - "7101:80"

  skicentar-api:
    restart: unless-stopped
    build:
      context: .
    environment:
      - DB_CONNECTION=${DB_CONNECTION_STRING}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_VIRTUALHOST=${RABBITMQ_VIRTUALHOST}
    ports:
      - "49153:49153"
    networks:
      - skicentarnet
    links:
      - skicentar-sql
    depends_on:
      - skicentar-sql
      
networks:
  skicentarnet:
    driver: bridge
